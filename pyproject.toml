[tool.poetry]
name = "ask-your-datasheet"
version = "0"
description = "Give to the tool the datasheet you want to understand and ask him questions on how to configure and use the peripheral"
authors = ["sebastianpfischer"]
license = "TBD, probably LGPL or dual license"
readme = "README.md"

keywords = [
    "datasheet",
    "AI",
    "Chatbot",
    "LLM",
    "STM32",
    "Embedded"
]
classifiers = [
    "Development Status :: 1 - Planning",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Operating System :: Unix",
    "Operating System :: POSIX",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
click = "^8.1.7"
langchain = ">=0.2.5"
prompt-toolkit = "^3.0.41"
openai = "^1.3.3"
langserve = {extras = ["all"], version = "^0.0.29"}
huggingface-hub = "^0.19.4"
transformers = "^4.35.2"
datasets = "^2.15.0"
pypdf = "^3.17.1"
chromadb = "^0.4.22"
langchain-community = "^0.2.5"
langchainhub = "^0.1.20"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
black = "^23.11.0"
coverage = "^7.3.2"
invoke = "*"
pre-commit = "*"
pylint = "*"
pytest-cov = "*"
pytest-mock = "*"
Sphinx = "*"
sphinx-rtd-theme = "*"
sphinxcontrib-programoutput = "*"
sphinx-autodoc-typehints = "*"
sphinx-rtd-dark-mode = "^1.2.4"
pytest-asyncio = "^0.21.0"
sphinx-pyproject = "^0.3.0"

[tool.pytest.ini_options]
testpaths = [
    "tests/"
]
addopts = """\
    --verbose \
    --log-level=INFO \
"""

[tool.coverage.run]
omit = [
    "*/tests/*",
    "*/examples/*",
    "*/tasks.py",
    "*__init__.py",
]

[tool.coverage.report]
exclude_lines = ["pass", "def __repr__" ,"pragma: no cover","if TYPE_CHECKING:"]

[tool.coverage.html]
directory = "tests/coverage_report.html"

[tool.coverage.xml]
output = "tests/coverage_report.xml"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry-git-version-plugin]
make_alpha_version = true
source = "git-tag"
alpha_version_format = '{version}-alpha.{distance}'
